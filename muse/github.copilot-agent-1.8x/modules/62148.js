var n = require(56105);
function i(e, t) {
  n.cipher.registerAlgorithm(e, function () {
    return new n.des.Algorithm(e, t);
  });
}
require(27140);
require(30445);
require(56827);
module.exports = n.des = n.des || {};
n.des.startEncrypting = function (e, t, r, n) {
  var i = f({
    key: e,
    output: r,
    decrypt: false,
    mode: n || (null === t ? "ECB" : "CBC"),
  });
  i.start(t);
  return i;
};
n.des.createEncryptionCipher = function (e, t) {
  return f({
    key: e,
    output: null,
    decrypt: false,
    mode: t,
  });
};
n.des.startDecrypting = function (e, t, r, n) {
  var i = f({
    key: e,
    output: r,
    decrypt: true,
    mode: n || (null === t ? "ECB" : "CBC"),
  });
  i.start(t);
  return i;
};
n.des.createDecryptionCipher = function (e, t) {
  return f({
    key: e,
    output: null,
    decrypt: true,
    mode: t,
  });
};
n.des.Algorithm = function (e, t) {
  var r = this;
  r.name = e;
  r.mode = new t({
    blockSize: 8,
    cipher: {
      encrypt: function (e, t) {
        return h(r._keys, e, t, false);
      },
      decrypt: function (e, t) {
        return h(r._keys, e, t, true);
      },
    },
  });
  r._init = false;
};
n.des.Algorithm.prototype.initialize = function (e) {
  if (!this._init) {
    var t = n.util.createBuffer(e.key);
    if (0 === this.name.indexOf("3DES") && 24 !== t.length())
      throw new Error("Invalid Triple-DES key size: " + 8 * t.length());
    this._keys = (function (e) {
      for (
        r = [
          0, 4, 536870912, 536870916, 65536, 65540, 536936448, 536936452, 512,
          516, 536871424, 536871428, 66048, 66052, 536936960, 536936964,
        ],
          n = [
            0, 1, 1048576, 1048577, 67108864, 67108865, 68157440, 68157441, 256,
            257, 1048832, 1048833, 67109120, 67109121, 68157696, 68157697,
          ],
          i = [
            0, 8, 2048, 2056, 16777216, 16777224, 16779264, 16779272, 0, 8,
            2048, 2056, 16777216, 16777224, 16779264, 16779272,
          ],
          o = [
            0, 2097152, 134217728, 136314880, 8192, 2105344, 134225920,
            136323072, 131072, 2228224, 134348800, 136445952, 139264, 2236416,
            134356992, 136454144,
          ],
          s = [
            0, 262144, 16, 262160, 0, 262144, 16, 262160, 4096, 266240, 4112,
            266256, 4096, 266240, 4112, 266256,
          ],
          a = [
            0, 1024, 32, 1056, 0, 1024, 32, 1056, 33554432, 33555456, 33554464,
            33555488, 33554432, 33555456, 33554464, 33555488,
          ],
          c = [
            0, 268435456, 524288, 268959744, 2, 268435458, 524290, 268959746, 0,
            268435456, 524288, 268959744, 2, 268435458, 524290, 268959746,
          ],
          l = [
            0, 65536, 2048, 67584, 536870912, 536936448, 536872960, 536938496,
            131072, 196608, 133120, 198656, 537001984, 537067520, 537004032,
            537069568,
          ],
          u = [
            0, 262144, 0, 262144, 2, 262146, 2, 262146, 33554432, 33816576,
            33554432, 33816576, 33554434, 33816578, 33554434, 33816578,
          ],
          d = [
            0, 268435456, 8, 268435464, 0, 268435456, 8, 268435464, 1024,
            268436480, 1032, 268436488, 1024, 268436480, 1032, 268436488,
          ],
          p = [
            0, 32, 0, 32, 1048576, 1048608, 1048576, 1048608, 8192, 8224, 8192,
            8224, 1056768, 1056800, 1056768, 1056800,
          ],
          h = [
            0, 16777216, 512, 16777728, 2097152, 18874368, 2097664, 18874880,
            67108864, 83886080, 67109376, 83886592, 69206016, 85983232,
            69206528, 85983744,
          ],
          f = [
            0, 4096, 134217728, 134221824, 524288, 528384, 134742016, 134746112,
            16, 4112, 134217744, 134221840, 524304, 528400, 134742032,
            134746128,
          ],
          g = [0, 4, 256, 260, 0, 4, 256, 260, 1, 5, 257, 261, 1, 5, 257, 261],
          m = e.length() > 8 ? 3 : 1,
          y = [],
          v = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0],
          _ = 0,
          b = 0,
          undefined;
        b < m;
        b++
      ) {
        var t;
        var r;
        var n;
        var i;
        var o;
        var s;
        var a;
        var c;
        var l;
        var u;
        var d;
        var p;
        var h;
        var f;
        var g;
        var m;
        var y;
        var v;
        var _;
        var b;
        var w = e.getInt32();
        var C = e.getInt32();
        w ^= (t = 252645135 & ((w >>> 4) ^ C)) << 4;
        w ^= t = 65535 & (((C ^= t) >>> -16) ^ w);
        w ^= (t = 858993459 & ((w >>> 2) ^ (C ^= t << -16))) << 2;
        w ^= t = 65535 & (((C ^= t) >>> -16) ^ w);
        w ^= (t = 1431655765 & ((w >>> 1) ^ (C ^= t << -16))) << 1;
        w ^= t = 16711935 & (((C ^= t) >>> 8) ^ w);
        t =
          ((w ^= (t = 1431655765 & ((w >>> 1) ^ (C ^= t << 8))) << 1) << 8) |
          (((C ^= t) >>> 20) & 240);
        w =
          (C << 24) |
          ((C << 8) & 16711680) |
          ((C >>> 8) & 65280) |
          ((C >>> 24) & 240);
        C = t;
        for (var E = 0; E < v.length; ++E) {
          if (v[E]) {
            w = (w << 2) | (w >>> 26);
            C = (C << 2) | (C >>> 26);
          } else {
            w = (w << 1) | (w >>> 27);
            C = (C << 1) | (C >>> 27);
          }
          var T =
            r[(w &= -15) >>> 28] |
            n[(w >>> 24) & 15] |
            i[(w >>> 20) & 15] |
            o[(w >>> 16) & 15] |
            s[(w >>> 12) & 15] |
            a[(w >>> 8) & 15] |
            c[(w >>> 4) & 15];
          var S =
            l[(C &= -15) >>> 28] |
            u[(C >>> 24) & 15] |
            d[(C >>> 20) & 15] |
            p[(C >>> 16) & 15] |
            h[(C >>> 12) & 15] |
            f[(C >>> 8) & 15] |
            g[(C >>> 4) & 15];
          t = 65535 & ((S >>> 16) ^ T);
          y[_++] = T ^ t;
          y[_++] = S ^ (t << 16);
        }
      }
      return y;
    })(t);
    this._init = true;
  }
};
i("DES-ECB", n.cipher.modes.ecb);
i("DES-CBC", n.cipher.modes.cbc);
i("DES-CFB", n.cipher.modes.cfb);
i("DES-OFB", n.cipher.modes.ofb);
i("DES-CTR", n.cipher.modes.ctr);
i("3DES-ECB", n.cipher.modes.ecb);
i("3DES-CBC", n.cipher.modes.cbc);
i("3DES-CFB", n.cipher.modes.cfb);
i("3DES-OFB", n.cipher.modes.ofb);
i("3DES-CTR", n.cipher.modes.ctr);
var o = [
  16843776, 0, 65536, 16843780, 16842756, 66564, 4, 65536, 1024, 16843776,
  16843780, 1024, 16778244, 16842756, 16777216, 4, 1028, 16778240, 16778240,
  66560, 66560, 16842752, 16842752, 16778244, 65540, 16777220, 16777220, 65540,
  0, 1028, 66564, 16777216, 65536, 16843780, 4, 16842752, 16843776, 16777216,
  16777216, 1024, 16842756, 65536, 66560, 16777220, 1024, 4, 16778244, 66564,
  16843780, 65540, 16842752, 16778244, 16777220, 1028, 66564, 16843776, 1028,
  16778240, 16778240, 0, 65540, 66560, 0, 16842756,
];
var s = [
  -2146402272, -2147450880, 32768, 1081376, 1048576, 32, -2146435040,
  -2147450848, -2147483616, -2146402272, -2146402304, -2147483648, -2147450880,
  1048576, 32, -2146435040, 1081344, 1048608, -2147450848, 0, -2147483648,
  32768, 1081376, -2146435072, 1048608, -2147483616, 0, 1081344, 32800,
  -2146402304, -2146435072, 32800, 0, 1081376, -2146435040, 1048576,
  -2147450848, -2146435072, -2146402304, 32768, -2146435072, -2147450880, 32,
  -2146402272, 1081376, 32, 32768, -2147483648, 32800, -2146402304, 1048576,
  -2147483616, 1048608, -2147450848, -2147483616, 1048608, 1081344, 0,
  -2147450880, 32800, -2147483648, -2146435040, -2146402272, 1081344,
];
var a = [
  520, 134349312, 0, 134348808, 134218240, 0, 131592, 134218240, 131080,
  134217736, 134217736, 131072, 134349320, 131080, 134348800, 520, 134217728, 8,
  134349312, 512, 131584, 134348800, 134348808, 131592, 134218248, 131584,
  131072, 134218248, 8, 134349320, 512, 134217728, 134349312, 134217728, 131080,
  520, 131072, 134349312, 134218240, 0, 512, 131080, 134349320, 134218240,
  134217736, 512, 0, 134348808, 134218248, 131072, 134217728, 134349320, 8,
  131592, 131584, 134217736, 134348800, 134218248, 520, 134348800, 131592, 8,
  134348808, 131584,
];
var c = [
  8396801, 8321, 8321, 128, 8396928, 8388737, 8388609, 8193, 0, 8396800,
  8396800, 8396929, 129, 0, 8388736, 8388609, 1, 8192, 8388608, 8396801, 128,
  8388608, 8193, 8320, 8388737, 1, 8320, 8388736, 8192, 8396928, 8396929, 129,
  8388736, 8388609, 8396800, 8396929, 129, 0, 0, 8396800, 8320, 8388736,
  8388737, 1, 8396801, 8321, 8321, 128, 8396929, 129, 1, 8192, 8388609, 8193,
  8396928, 8388737, 8193, 8320, 8388608, 8396801, 128, 8388608, 8192, 8396928,
];
var l = [
  256, 34078976, 34078720, 1107296512, 524288, 256, 1073741824, 34078720,
  1074266368, 524288, 33554688, 1074266368, 1107296512, 1107820544, 524544,
  1073741824, 33554432, 1074266112, 1074266112, 0, 1073742080, 1107820800,
  1107820800, 33554688, 1107820544, 1073742080, 0, 1107296256, 34078976,
  33554432, 1107296256, 524544, 524288, 1107296512, 256, 33554432, 1073741824,
  34078720, 1107296512, 1074266368, 33554688, 1073741824, 1107820544, 34078976,
  1074266368, 256, 33554432, 1107820544, 1107820800, 524544, 1107296256,
  1107820800, 34078720, 0, 1074266112, 1107296256, 524544, 33554688, 1073742080,
  524288, 0, 1074266112, 34078976, 1073742080,
];
var u = [
  536870928, 541065216, 16384, 541081616, 541065216, 16, 541081616, 4194304,
  536887296, 4210704, 4194304, 536870928, 4194320, 536887296, 536870912, 16400,
  0, 4194320, 536887312, 16384, 4210688, 536887312, 16, 541065232, 541065232, 0,
  4210704, 541081600, 16400, 4210688, 541081600, 536870912, 536887296, 16,
  541065232, 4210688, 541081616, 4194304, 16400, 536870928, 4194304, 536887296,
  536870912, 16400, 536870928, 541081616, 4210688, 541065216, 4210704,
  541081600, 0, 541065232, 16, 16384, 541065216, 4210704, 16384, 4194320,
  536887312, 0, 541081600, 536870912, 4194320, 536887312,
];
var d = [
  2097152, 69206018, 67110914, 0, 2048, 67110914, 2099202, 69208064, 69208066,
  2097152, 0, 67108866, 2, 67108864, 69206018, 2050, 67110912, 2099202, 2097154,
  67110912, 67108866, 69206016, 69208064, 2097154, 69206016, 2048, 2050,
  69208066, 2099200, 2, 67108864, 2099200, 67108864, 2099200, 2097152, 67110914,
  67110914, 69206018, 69206018, 2, 2097154, 67108864, 67110912, 2097152,
  69208064, 2050, 2099202, 69208064, 2050, 67108866, 69208066, 69206016,
  2099200, 0, 2, 69208066, 0, 2099202, 69206016, 2048, 67108866, 67110912, 2048,
  2097154,
];
var p = [
  268439616, 4096, 262144, 268701760, 268435456, 268439616, 64, 268435456,
  262208, 268697600, 268701760, 266240, 268701696, 266304, 4096, 64, 268697600,
  268435520, 268439552, 4160, 266240, 262208, 268697664, 268701696, 4160, 0, 0,
  268697664, 268435520, 268439552, 266304, 262144, 266304, 262144, 268701696,
  4096, 64, 268697664, 4096, 266304, 268439552, 64, 268435520, 268697600,
  268697664, 268435456, 262144, 268439616, 0, 268701760, 262208, 268435520,
  268697600, 268439552, 268439616, 0, 268701760, 266240, 266240, 4160, 4160,
  262208, 268435456, 268701696,
];
function h(e, t, r, n) {
  var i;
  var h;
  var f = 32 === e.length ? 3 : 9;
  i =
    3 === f
      ? n
        ? [30, -2, -2]
        : [0, 32, 2]
      : n
      ? [94, 62, -2, 32, 64, 2, 30, -2, -2]
      : [0, 32, 2, 62, 30, -2, 64, 96, 2];
  var g = t[0];
  var m = t[1];
  g ^= (h = 252645135 & ((g >>> 4) ^ m)) << 4;
  g ^= (h = 65535 & ((g >>> 16) ^ (m ^= h))) << 16;
  g ^= h = 858993459 & (((m ^= h) >>> 2) ^ g);
  g ^= h = 16711935 & (((m ^= h << 2) >>> 8) ^ g);
  g =
    ((g ^= (h = 1431655765 & ((g >>> 1) ^ (m ^= h << 8))) << 1) << 1) |
    (g >>> 31);
  m = ((m ^= h) << 1) | (m >>> 31);
  for (var y = 0; y < f; y += 3) {
    for (v = i[y + 1], _ = i[y + 2], b = i[y], undefined; b != v; b += _) {
      var v;
      var _;
      var b;
      var w = m ^ e[b];
      var C = ((m >>> 4) | (m << 28)) ^ e[b + 1];
      h = g;
      g = m;
      m =
        h ^
        (s[(w >>> 24) & 63] |
          c[(w >>> 16) & 63] |
          u[(w >>> 8) & 63] |
          p[63 & w] |
          o[(C >>> 24) & 63] |
          a[(C >>> 16) & 63] |
          l[(C >>> 8) & 63] |
          d[63 & C]);
    }
    h = g;
    g = m;
    m = h;
  }
  m = (m >>> 1) | (m << 31);
  m ^= h = 1431655765 & (((g = (g >>> 1) | (g << 31)) >>> 1) ^ m);
  m ^= (h = 16711935 & ((m >>> 8) ^ (g ^= h << 1))) << 8;
  m ^= (h = 858993459 & ((m >>> 2) ^ (g ^= h))) << 2;
  m ^= h = 65535 & (((g ^= h) >>> 16) ^ m);
  m ^= h = 252645135 & (((g ^= h << 16) >>> 4) ^ m);
  g ^= h << 4;
  r[0] = g;
  r[1] = m;
}
function f(e) {
  var t;
  var r = "DES-" + ((e = e || {}).mode || "CBC").toUpperCase();
  var i = (t = e.decrypt
    ? n.cipher.createDecipher(r, e.key)
    : n.cipher.createCipher(r, e.key)).start;
  t.start = function (e, r) {
    var o = null;
    if (r instanceof n.util.ByteBuffer) {
      o = r;
      r = {};
    }
    (r = r || {}).output = o;
    r.iv = e;
    i.call(t, r);
  };
  return t;
}